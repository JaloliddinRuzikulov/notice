; Enhanced Xabarnoma Dialplan with Multiple DTMF Detection Methods
; This dialplan ensures DTMF is captured and sent to Node.js

[xabarnoma-broadcast-dtmf]
; Main broadcast context with DTMF capture
exten => _X.,1,NoOp(Enhanced broadcast to ${EXTEN})
 same => n,Set(PHONE_NUMBER=${EXTEN})
 same => n,Set(CHANNEL_ID=${CHANNEL})
 same => n,Set(UNIQUE_ID=${UNIQUEID})
 same => n,Answer()
 
; Method 1: Use AGI for DTMF capture
 same => n,GotoIf($["${AUDIO_FILE}" != ""]?play_with_agi:direct_play)
 
; AGI method - most reliable
 same => n(play_with_agi),NoOp(Using AGI for DTMF capture)
 same => n,AGI(/home/user/asterisk/agi-dtmf-bridge.py)
 same => n,Goto(end_call)
 
; Direct play method with Read()
 same => n(direct_play),NoOp(Using Read() for DTMF capture)
 same => n,GotoIf($["${AUDIO_FILE}" != ""]?has_audio:no_audio)
 
 same => n(has_audio),NoOp(Playing audio file: ${AUDIO_FILE})
 same => n,Read(DTMF_DIGIT,${AUDIO_FILE},1,,,30)
 same => n,Goto(check_dtmf)
 
 same => n(no_audio),NoOp(No audio file, waiting for DTMF)
 same => n,Read(DTMF_DIGIT,,1,,,30)
 
 same => n(check_dtmf),NoOp(DTMF received: ${DTMF_DIGIT})
 same => n,GotoIf($["${DTMF_DIGIT}" = ""]?no_dtmf:got_dtmf)
 
; Send DTMF to Node.js via System command
 same => n(got_dtmf),NoOp(Sending DTMF ${DTMF_DIGIT} to Node.js)
 same => n,System(/usr/bin/curl -k -X POST https://localhost:8444/api/internal/dtmf-confirm -H "Content-Type: application/json" -d '{"phone":"${EXTEN}","digit":"${DTMF_DIGIT}","channel":"${CHANNEL}","uniqueid":"${UNIQUEID}"}' > /dev/null 2>&1 &)
 same => n,GotoIf($["${DTMF_DIGIT}" = "1"]?confirmed:wait_more)
 
 same => n(confirmed),NoOp(Broadcast confirmed with digit 1)
 same => n,Wait(1)
 same => n,Hangup()
 
 same => n(wait_more),NoOp(Waiting for more DTMF)
 same => n,WaitExten(30)
 
 same => n(no_dtmf),NoOp(No DTMF received)
 same => n,Wait(5)
 
 same => n(end_call),NoOp(Ending call)
 same => n,Hangup()
 
; Handle additional DTMF during WaitExten
exten => _X,1,NoOp(Additional DTMF: ${EXTEN})
 same => n,System(/usr/bin/curl -k -X POST https://localhost:8444/api/internal/dtmf-confirm -H "Content-Type: application/json" -d '{"phone":"${PHONE_NUMBER}","digit":"${EXTEN}","channel":"${CHANNEL}","uniqueid":"${UNIQUEID}"}' > /dev/null 2>&1 &)
 same => n,GotoIf($["${EXTEN}" = "1"]?1,confirmed:wait_more)
 same => n(wait_more),WaitExten(30)

; Alternative context for SIP INFO method
[xabarnoma-sip-info]
exten => _X.,1,NoOp(SIP INFO enabled broadcast to ${EXTEN})
 same => n,Set(__TRANSFER_CONTEXT=xabarnoma-dtmf-handler)
 same => n,Set(DTMF_MODE=info)
 same => n,Answer()
 same => n,GotoIf($["${AUDIO_FILE}" != ""]?play:wait)
 same => n(play),Playback(${AUDIO_FILE})
 same => n(wait),Wait(30)
 same => n,Hangup()

; DTMF handler context for transfers
[xabarnoma-dtmf-handler]
exten => _X,1,NoOp(DTMF via transfer: ${EXTEN})
 same => n,System(/usr/bin/curl -k -X POST https://localhost:8444/api/internal/dtmf-confirm -H "Content-Type: application/json" -d '{"phone":"${CALLERID(num)}","digit":"${EXTEN}","channel":"${CHANNEL}","uniqueid":"${UNIQUEID}"}' > /dev/null 2>&1 &)
 same => n,GotoIf($["${EXTEN}" = "1"]?hangup:return)
 same => n(hangup),Hangup()
 same => n(return),Return()

; Features.conf addition for DTMF feature codes
[xabarnoma-features]
; Press 1 to confirm
confirm => 1,self,System,/usr/bin/curl -k -X POST https://localhost:8444/api/internal/dtmf-confirm -H "Content-Type: application/json" -d '{"phone":"${CALLERID(num)}","digit":"1","channel":"${CHANNEL}","uniqueid":"${UNIQUEID}"}' > /dev/null 2>&1 &